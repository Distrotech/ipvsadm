.\"
.\"     This program is free software; you can redistribute it and/or modify
.\"     it under the terms of the GNU General Public License as published by
.\"     the Free Software Foundation; either version 2 of the License, or
.\"     (at your option) any later version.
.\"
.\"     This program is distributed in the hope that it will be useful,
.\"     but WITHOUT ANY WARRANTY; without even the implied warranty of
.\"     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\"     GNU General Public License for more details.
.\"
.\"     You should have received a copy of the GNU General Public License
.\"     along with this program; if not, write to the Free Software
.\"     Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
.\"
.\"	$Id$	
.\"
.TH IPVSADM 8 "October 17, 1999" "LVS Administration" " Linux Administrator's Guide"
.UC 4
.SH NAME
ipvsadm \- administer the routing table on a  Linux Virtual Server
.SH SYNOPSIS
.B ipvsadm -[A|E] -[t|u] \fIservice-address\fP [-s \fIscheduler\fP]
.ti 15
.B [-p [\fItimeout\fP]] [-M \fInetmask\fP]
.br
.B ipvsadm -D -[t|u] \fIservice-address\fP
.br
.B ipvsadm -C
.br
.B ipvsadm -R
.br
.B ipvsadm -S [-n]
.br
.B ipvsadm -[a|e] -[t|u] \fIservice-address\fP -[r|R] \fIserver-address\fP
.ti 15
.B [-g|-i|-m] [-w \fIweight\fP]
.br
.B ipvsadm -d -[t|u] \fIservice-address\fP -[r|R] \fIserver-address\fP
.br
.B ipvsadm -[L|l] [-n]
.br
.B ipvsadm -h
.SH DESCRIPTION
Use \fBipvsadm\fP(8) to build a Linux Virtual Server (LVS) based on a
cluster  of two or more nodes. The active node of the cluster
redirects service requests  to a collection of server hosts that will
actually perform the services. You  use \fBipvsadm\fR(8) to set up,
maintain or inspect the kernel routing table.  Supported features
include two protocols (TCP and UDP), three packet-forwarding  methods
(NAT, tunneling, and direct routing), and four load balancing
algorithms (round robin, weighted round robin, least-connection and
weighted least-connection).
.PP
The command has these two basic versions:
.TP
.B ipvsadm COMMAND [protocol] service-address [scheduling-method] [persistent-timeout]
.TP
.B ipvsadm command [protocol] service-address server-address [packet-forwarding-method] [server-capacity]  
.PP
The first version adds a public service address (a host address and
port associated with a service request rather than a specific network
host) to the kernel routing table and specifies the method for
assigning service requests  to hosts and the persistent timeout. The
second version associates an existing  public service address in the
table with the addresses of the server hosts to  which requests for
service may be redirected. This version also indicates the
packet-forwarding method and the capacity of the server hosts relative
to one another.
.SS COMMANDS
\fBipvsadm\fR(8) recognizes the commands described below. Upper-case
commands maintain public service addresses. Lower-case commands
maintain the associations between a service address and the network
hosts to which requests for service are redirected.
.TP
\fB-A, --add-service\fR
Add a public service address to the routing table. A service address
is uniquely defined by a triplet: IP address, port number, and
protocol type.
.TP
\fB-E, --edit-service\fR
Edit a service currently in the routing table.
.TP
\fB-D, --delete-service\fR
Delete a service address from the routing table, along with any
associated server hosts added with the \fI-a\fP command.
.TP
\fB-C, --clear\fR
Clear the routing table.
.TP
\fB-R, --restore\fR
This option only works if ipvsadm is compiled with libpopt.  Restore
IPVS rules from stdin. Each line read from stdin will be treated as
the command line options to a separate invocation of ipvsadm. Lines
read from stdin can optionally begin with "ipvsadm".  The -R option is
useful to avoid executing a large number or ipvsadm commands when
constructing an extensive routing table.
.TP
\fB-S, --save\fR
This option only works if ipvsadm is compiled with libpopt.
Dump the IPVS rules to stdout.
.TP
\fB-a, --add-server\fR
Associate an existing public service address with a server host to
which the service may be redirected.
.TP
\fB-d, --delete-server\fR
Remove a server from the pool of hosts to which a service may be
redirected.
.TP
\fB-L, -l, --list\fR
Display the routing table.
.TP
\fB-h, --help\fR
Help. Display a description of the command syntax.
.SS PARAMETERS
The commands above accept or require zero or more of the following
parameters. 
.TP
.B -t, --tcp-service \fIservice-address\fP
Use TCP service. The \fIservice-address\fP is a \fIhost\fP and
\fIport\fP  associated with a service to be redirected. \fIHost\fP can
be either a plain IP address or a hostname. \fIPort\fP can be either a
plain port number or the service name of port.
.TP
.B -u, --udp-service \fIservice-address\fP
Use UDP service. See the -t (tcp-service) for the description of 
the \fIservice-address\fP.
.TP
.B -s, --scheduler \fIscheduling-method\fP
\fIscheduling-method\fP is the algorithm for distributing the jobs to
servers:
.sp
\fBrr\fR - robin robin: distribute jobs equally among the available servers.
.sp
\fBwrr\fR - weighted round robin: assign more jobs to servers with
larger capacity (i.e., assign jobs in descending order by \fIweight\fP).
.sp
\fBlc\fR - least-connection: assign more jobs to servers with fewer active 
jobs.
.sp
\fBwlc\fR - weighted least-connection: assign more jobs to servers with
fewer active jobs relative to their capacity (i.e., number of active jobs
divided by \fIweight\fP). This is the default.
.TP
.B -p, --persistent [\fItimeout\fP]
Persistent port. If this switch is specified, multiple requests from a
client are redirected to the same server each time (the one selected
for the first request). The \fItimeout\fP of persistent sessions can
be specified by the  values in seconds, the default is 300
seconds. Use this option to solve  problems with cookies, SSL, or FTP
with tunneling or direct routing.
.TP
.B -M, --netmask \fInetmask\fP
For persistent ports, allows you to specify the granularity at which
the clients are grouped. The source address of the request is masked
with this netmask to, for example, direct all clients from a /24
network to the same real server. The default is \fI255.255.255.255\fP,
which means that the persistence granularity is per client host. Use
this option to solve  problems with non-persistent cache clusters on
the client side.
.TP
.B -r, -R, --real-server \fIserver-address\fP
Real server that an associated request for service may be assigned to.
The \fIserver-address\fP is the \fIhost\fP address of a real server,
and may plus \fIport\fP. \fIHost\fP can be either a plain IP address
or a hostname.  \fIPort\fP can be either a plain port number or the
service name of port.  In the case of the masquerading method, the
host address is usually a private IP address, and the port can be
different from that of the associated service. If \fIport\fP is not
specified, the port specified  in the service address will be
used. With the tunneling and direct routing methods, \fIport\fP must
be equal to that of the service address.
.TP
.B [packet-forwarding-method]
.sp
\fB-g, --gatewaying\fR  Use gatewaying (direct routing). This is the default.
.sp
\fB-i, --ipip\fR  Use ipip encapsulation (tunneling).
.sp
\fB-m, --masquerading\fR  Use masquerading (network access translation, or NAT).
.TP
.B -w, --weight \fIweight\fP
\fIweight\fP is an integer (default 1) specifying the processing
capacity  of a server relative to that of others in the pool. The
valid values of \fIweight\fP is from 0 through 65535. The server with
weight=0 is "quiesced" and receives no new jobs but still serves the
existing jobs. It is useful to cool down overloaded servers or get
some servers out of service for maintenance.
.TP
.B -n, --numeric
Numeric output.  IP addresses and port numbers will be printed in
numeric format.  By default, the program will try to display them as
host names, network names, or services (whenever applicable).
.SH EXAMPLE
The following commands configure a redirector host to distribute
incoming Web requests addressed to port 80 on 207.175.44.110 equally
to port 80 on five Web server hosts.  The networking model for this
example is NAT with each of the real servers being masqueraded by the
LVS.
.PP
.nf
ipvsadm -A -t 207.175.44.110:80 -s rr
ipvsadm -a -t 207.175.44.110:80 -r 192.168.10.1 -m
ipvsadm -a -t 207.175.44.110:80 -r 192.168.10.2 -m
ipvsadm -a -t 207.175.44.110:80 -r 192.168.10.3 -m 
ipvsadm -a -t 207.175.44.110:80 -r 192.168.10.4 -m 
ipvsadm -a -t 207.175.44.110:80 -r 192.168.10.5 -m 
.fi
.PP
Alternatively this could be achieved in a single ipvsadm command.
.PP
.nf
echo "
-A -t 207.175.44.110:80 -s rr
-a -t 207.175.44.110:80 -r 192.168.10.1 -m
-a -t 207.175.44.110:80 -r 192.168.10.2 -m
-a -t 207.175.44.110:80 -r 192.168.10.3 -m
-a -t 207.175.44.110:80 -r 192.168.10.4 -m
-a -t 207.175.44.110:80 -r 192.168.10.5 -m
" | ipvsadm -R
.fi
.PP
The default route of the Web server hosts must be set to the
redirector box, and the redirector box must be configured to forward
the masquerading packets.
.PP
.nf
echo "1" > /proc/sys/net/ipv4/ip_forward
ipchains -A forward -j MASQ -s 192.168.10.0/24 -d 0.0.0.0/0
.fi
.SH FILES
.I /proc/net/ip-masq/vs
.SH SEE ALSO
.BR lvs (8),
.BR lvs.cf (5).
.SH AUTHORS
.nf
ipvsadm - Wensong Zhang <wensong@iinchina.net>
	     Peter Kese <peter.kese@ijs.si>
man page - Mike Wangsmo <wanger@redhat.com>
           Wensong Zhang <wensong@iinchina.net>
.fi
